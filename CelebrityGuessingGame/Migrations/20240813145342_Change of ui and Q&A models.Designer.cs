// <auto-generated />
using CelebrityGuessingGame.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CelebrityGuessingGame.Migrations
{
    [DbContext(typeof(DatabaseService))]
    [Migration("20240813145342_Change of ui and Q&A models")]
    partial class ChangeofuiandQAmodels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("CelebrityGuessingGame.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SelectedOptionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("SelectedOptionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("CelebrityGuessingGame.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OptionText = "Yes",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            OptionText = "No",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            OptionText = "Tall",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 4,
                            OptionText = "Medium",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 5,
                            OptionText = "Short",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            OptionText = "Old",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 7,
                            OptionText = "Young",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 8,
                            OptionText = "Middle-aged",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 9,
                            OptionText = "Yes",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 10,
                            OptionText = "No",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 11,
                            OptionText = "Yes",
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 12,
                            OptionText = "No",
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 13,
                            OptionText = "Yes",
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 14,
                            OptionText = "No",
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 15,
                            OptionText = "Yes",
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 16,
                            OptionText = "No",
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 17,
                            OptionText = "Yes",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 18,
                            OptionText = "No",
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 19,
                            OptionText = "Yes",
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 20,
                            OptionText = "No",
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 21,
                            OptionText = "Yes",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 22,
                            OptionText = "No",
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 23,
                            OptionText = "Yes",
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 24,
                            OptionText = "No",
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 25,
                            OptionText = "Yes",
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 26,
                            OptionText = "No",
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 27,
                            OptionText = "Yes",
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 28,
                            OptionText = "No",
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 29,
                            OptionText = "Yes",
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 30,
                            OptionText = "No",
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 31,
                            OptionText = "Yes",
                            QuestionId = 15
                        },
                        new
                        {
                            Id = 32,
                            OptionText = "No",
                            QuestionId = 15
                        });
                });

            modelBuilder.Entity("CelebrityGuessingGame.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionText = "Is the celebrity male?"
                        },
                        new
                        {
                            Id = 2,
                            QuestionText = "Is the person tall, medium, or short?"
                        },
                        new
                        {
                            Id = 3,
                            QuestionText = "Is the person old, young, or middle-aged?"
                        },
                        new
                        {
                            Id = 4,
                            QuestionText = "Is the person alive?"
                        },
                        new
                        {
                            Id = 5,
                            QuestionText = "Is the person an actor?"
                        },
                        new
                        {
                            Id = 6,
                            QuestionText = "Is the person a singer?"
                        },
                        new
                        {
                            Id = 7,
                            QuestionText = "Is the person American?"
                        },
                        new
                        {
                            Id = 8,
                            QuestionText = "Is the person involved in sports?"
                        },
                        new
                        {
                            Id = 9,
                            QuestionText = "Is the person a politician?"
                        },
                        new
                        {
                            Id = 10,
                            QuestionText = "Has the person won any awards?"
                        },
                        new
                        {
                            Id = 11,
                            QuestionText = "Is the person known for their philanthropy?"
                        },
                        new
                        {
                            Id = 12,
                            QuestionText = "Is the person involved in business?"
                        },
                        new
                        {
                            Id = 13,
                            QuestionText = "Is the person associated with fashion?"
                        },
                        new
                        {
                            Id = 14,
                            QuestionText = "Is the person known internationally?"
                        },
                        new
                        {
                            Id = 15,
                            QuestionText = "Is the person a public speaker?"
                        });
                });

            modelBuilder.Entity("CelebrityGuessingGame.Models.Answer", b =>
                {
                    b.HasOne("CelebrityGuessingGame.Models.Question", "Question")
                        .WithOne("Answer")
                        .HasForeignKey("CelebrityGuessingGame.Models.Answer", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CelebrityGuessingGame.Models.Option", "SelectedOption")
                        .WithMany()
                        .HasForeignKey("SelectedOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("SelectedOption");
                });

            modelBuilder.Entity("CelebrityGuessingGame.Models.Option", b =>
                {
                    b.HasOne("CelebrityGuessingGame.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CelebrityGuessingGame.Models.Question", b =>
                {
                    b.Navigation("Answer")
                        .IsRequired();

                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
